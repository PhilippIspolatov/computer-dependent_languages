Microsoft (R) Macro Assembler Version 5.10                  4/18/18 14:21:28
                                                             Page     1-1


				PUBLIC	PR_Out10
				EXTRN	PR_NewLine:NEAR
				
				
				
				
 0000				Code	SEGMENT	PUBLIC
					ASSUME CS:Code
				;----------------------------------------------
				----------------------------------------
				;Печатает переменную, переданную через стек, ка
				к десятичное число без знака (15 как 15, -15 ка
				к 65521)
				;----------------------------------------------
				----------------------------------------
 0000				PR_Out10	PROC	NEAR
 0000  55					PUSH		BP	
					;передаем параметр
 0001  8B EC					MOV		BP,SP
 0003  50					PUSH		AX	
					;используем для деления
 0004  52					PUSH		DX
 0005  53					PUSH		BX
				
 0006  8B 46 04					MOV		AX,[BP+4]
					;получаем в АХ число, которое надо расп
				ечатать
 0009  BB 000A					MOV		BX,10	
					;делить будем на десять; BX целиком что
				бы возникало
									
					;деление двойного слова (и не возникало
				 переполнения)
				
									
					;а теперь, алгоритм следующий: предполо
				жим в АХ лежит десятичное 123, 
									
					;тогда вначале мы выделим место под это
				 число,
									
					;то есть > ___ , а потом будем печатать
				 со сдвигом влево: > __3 , > _23 , > 123
				
 000C  50					PUSH		AX	
					;сохраним АХ, потому что нам его два ра
				за печатать
				
									
					;в этом цикле будем печатать необходимо
				е количество пропусков
 000D				LO10_Div1:
 000D  BA 0000					MOV		DX,0
 0010  F7 F3					DIV		BX	
Microsoft (R) Macro Assembler Version 5.10                  4/18/18 14:21:28
                                                             Page     1-2


					;AX делим на BX(основание), остаток буд
				ем искать в DX
 0012  50					PUSH		AX	
					;сохраним значение AX (целая часть)
 0013  B4 02					MOV		AH,2	
					;печатаем пропуск
 0015  B2 61					MOV		DL,'a'
 0017  CD 21					INT		21h
 0019  58					POP		AX	
					;восстанавливаем число
 001A  3D 0000					CMP		AX,0	
					;если оно не ноль
 001D  75 EE					JNE		LO10_Div1
					;то прыг
				
 001F  B4 02					MOV		AH,2
 0021  B2 08					MOV 		DL,8	
					;делаем один откат назад
 0023  CD 21					INT 		21h
				
 0025  58					POP		AX	
					;восстанавливаем ИЗНАЧАЛЬНОЕ число
				
 0026					LO10_Div2:
 0026  BA 0000					MOV		DX,0
 0029  F7 F3					DIV		BX	
					;AX делим на BX(основание), остаток буд
				ем искать в DX
 002B  50					PUSH	AX		
					;сохраним значение AX (целая часть)
 002C  B4 02					MOV		AH,2
 002E  80 C2 30					ADD		DL,'0'	
					;печатаем значение DX (остаток)
 0031  CD 21					INT		21h
 0033  B2 08					MOV		DL,8	
					;смещаемся назад ДВАЖДЫ
 0035  CD 21					INT		21h
 0037  CD 21					INT		21h
 0039  58					POP		AX	
					;восстанавливаем оставшуюся часть
 003A  3D 0000					CMP		AX,0	
					;если число еще не ноль
 003D  75 E7					JNE		LO10_Div2
					;то прыг
				
				
 003F  5B					POP		BX
 0040  5A					POP		DX
 0041  58					POP		AX
 0042  5D					POP		BP
 0043  C3					RET
 0044				PR_Out10	ENDP
				;----------------------------------------------
				----------------------------------------
Microsoft (R) Macro Assembler Version 5.10                  4/18/18 14:21:28
                                                             Page     1-3


 0044				Code	ENDS
				
				END
Microsoft (R) Macro Assembler Version 5.10                  4/18/18 14:21:28
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	0044	PARA	PUBLIC	

Symbols:            

                N a m e         	Type	 Value	 Attr

LO10_DIV1  . . . . . . . . . . .  	L NEAR	000D	CODE
LO10_DIV2  . . . . . . . . . . .  	L NEAR	0026	CODE

PR_NEWLINE . . . . . . . . . . .  	L NEAR	0000		External
PR_OUT10 . . . . . . . . . . . .  	N PROC	0000	CODE	Global	Length = 0044

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  _out10		
@VERSION . . . . . . . . . . . .  	TEXT  510		


     71 Source  Lines
     71 Total   Lines
     14 Symbols

  47022 + 444942 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
